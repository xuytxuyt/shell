
using ApproxOperator, Tensors, JLD, LinearAlgebra

import BenchmarkExample: BenchmarkExample
include("import_prescrible_ops.jl")
include("import_patch_test.jl")
elements, nodes = import_roof_mix("msh/patchtest.msh")

# n‚Çò = 55
n‚Çò = 21
ùëÖ = BenchmarkExample.PatchTestThinShell.ùëÖ
ùêø = BenchmarkExample.PatchTestThinShell.ùêø
E = BenchmarkExample.PatchTestThinShell.ùê∏
ŒΩ = BenchmarkExample.PatchTestThinShell.ùúà
h = BenchmarkExample.PatchTestThinShell.‚Ñé

cs = BenchmarkExample.cylindricalCoordinate(ùëÖ)
# cs = BenchmarkExample.cartesianCoordinate()

n‚Çö = length(nodes)
n·µ• = Int(length(elements["Œ©"])*3)
s = 2.5*0.1*ones(n‚Çö)
push!(nodes,:s‚ÇÅ=>s,:s‚ÇÇ=>s,:s‚ÇÉ=>s)

n = 2
u(x) = Vec{3}(((x[1]+2*x[2])^n,(3*x[1]+4*x[2])^n,(5*x[1]+6*x[2])^n))
vs = BenchmarkExample.PatchTestThinShell.variables(cs,u)

eval(prescribeForMix)
eval(prescribeVariables)

setùù≠!(elements["Œ©"])
set‚àá¬≤ùù≠!(elements["Œ©‚Çö"])
set‚àáùù≠!(elements["Œì‚Çö"])
set‚àáùù≠!(elements["Œ©‚Çò"])
set‚àáùù≠!(elements["Œì‚Çò"])
set‚àáùù≠!(elements["Œì¬π"])
set‚àáùù≠!(elements["Œì¬≤"])
set‚àáùù≠!(elements["Œì¬≥"])
set‚àáùù≠!(elements["Œì‚Å¥"])

eval(opsMix)

opForce = Operator{:‚à´v·µ¢b·µ¢dŒ©}()
f = zeros(3*n‚Çö)
opForce(elements["Œ©‚Çò"],f)

k·µã·µã = zeros(6*n·µ•,6*n·µ•)
k·¥∫·µã = zeros(6*n·µ•,6*n·µ•)
k·¥∫·µõ = zeros(6*n·µ•,3*n‚Çö)
k·µè·µè = zeros(9*n·µ•,9*n·µ•)
k·¥π·µè = zeros(9*n·µ•,9*n·µ•)
k·¥π·µõ = zeros(9*n·µ•,3*n‚Çö)

ops[1](elements["Œ©"],k·µã·µã)
ops[2](elements["Œ©"],k·¥∫·µã)
ops[3](elements["Œì‚Çö"],elements["Œì‚Çò"],k·¥∫·µõ)
ops[4](elements["Œ©‚Çö"],elements["Œ©‚Çò"],k·¥∫·µõ)

ops[5](elements["Œ©"],k·µè·µè)
ops[6](elements["Œ©"],k·¥π·µè)
ops[7](elements["Œì‚Çö"],elements["Œì‚Çò"],k·¥π·µõ)
ops[8](elements["Œì‚Çö"],elements["Œì‚Çò"],k·¥π·µõ)
ops[9](elements["Œì‚Çö"],elements["Œì‚Çò"],k·¥π·µõ)
ops[10](elements["Œ©‚Çö"],elements["Œ©‚Çò"],k·¥π·µõ)

eval(opsHR)
f·¥∫ = zeros(6*n·µ•)
f·¥π = zeros(9*n·µ•)
opsh[1](elements["Œì¬π‚Çö"],elements["Œì¬π"],k·¥∫·µõ,f·¥∫)
opsh[1](elements["Œì¬≤‚Çö"],elements["Œì¬≤"],k·¥∫·µõ,f·¥∫)
opsh[1](elements["Œì¬≥‚Çö"],elements["Œì¬≥"],k·¥∫·µõ,f·¥∫)
opsh[1](elements["Œì‚Å¥‚Çö"],elements["Œì‚Å¥"],k·¥∫·µõ,f·¥∫)
opsh[2](elements["Œì¬π‚Çö"],elements["Œì¬π"],k·¥π·µõ,f·¥π)
opsh[2](elements["Œì¬≤‚Çö"],elements["Œì¬≤"],k·¥π·µõ,f·¥π)
opsh[2](elements["Œì¬≥‚Çö"],elements["Œì¬≥"],k·¥π·µõ,f·¥π)
opsh[2](elements["Œì‚Å¥‚Çö"],elements["Œì‚Å¥"],k·¥π·µõ,f·¥π)
opsh[3](elements["Œì¬π‚Çö"],elements["Œì¬π"],k·¥π·µõ,f·¥π)
opsh[3](elements["Œì¬≤‚Çö"],elements["Œì¬≤"],k·¥π·µõ,f·¥π)
opsh[3](elements["Œì¬≥‚Çö"],elements["Œì¬≥"],k·¥π·µõ,f·¥π)
opsh[3](elements["Œì‚Å¥‚Çö"],elements["Œì‚Å¥"],k·¥π·µõ,f·¥π)
opsh[4](elements["Œì¬π‚Çö"],elements["Œì¬π"],k·¥π·µõ,f·¥π)
opsh[4](elements["Œì¬≤‚Çö"],elements["Œì¬≤"],k·¥π·µõ,f·¥π)
opsh[4](elements["Œì¬≥‚Çö"],elements["Œì¬≥"],k·¥π·µõ,f·¥π)
opsh[4](elements["Œì‚Å¥‚Çö"],elements["Œì‚Å¥"],k·¥π·µõ,f·¥π)

# d = [zeros(3*n‚Çö,3*n‚Çö) zeros(3*n‚Çö,6*n·µ•) zeros(3*n‚Çö,9*n·µ•) k·¥∫·µõ' k·¥π·µõ';
#      zeros(6*n·µ•,3*n‚Çö) k·µã·µã zeros(6*n·µ•,9*n·µ•) k·¥∫·µã' zeros(6*n·µ•,9*n·µ•);
#      zeros(9*n·µ•,3*n‚Çö) zeros(9*n·µ•,6*n·µ•) k·µè·µè zeros(9*n·µ•,6*n·µ•) k·¥π·µè';
#      k·¥∫·µõ k·¥∫·µã zeros(6*n·µ•,9*n·µ•) zeros(6*n·µ•,6*n·µ•) zeros(6*n·µ•,9*n·µ•);
#      k·¥π·µõ zeros(9*n·µ•,6*n·µ•) k·¥π·µè zeros(9*n·µ•,6*n·µ•) zeros(9*n·µ•,9*n·µ•)]\[-f;zeros(6*n·µ•);zeros(9*n·µ•);f·¥∫;f·¥π]

k·µã·µõ = k·¥∫·µã\k·¥∫·µõ
k·µè·µõ = k·¥π·µè\k·¥π·µõ
d = (k·µã·µõ'*k·µã·µã*k·µã·µõ + k·µè·µõ'*k·µè·µè*k·µè·µõ)\(-f + k·µã·µõ'*k·µã·µã*(k·¥∫·µã\f·¥∫) + k·µè·µõ'*k·µè·µè*(k·¥π·µè\f·¥π))

d‚ÇÅ = d[1:3:3*n‚Çö]
d‚ÇÇ = d[2:3:3*n‚Çö]
d‚ÇÉ = d[3:3:3*n‚Çö]

push!(nodes,:d‚ÇÅ=>d‚ÇÅ,:d‚ÇÇ=>d‚ÇÇ,:d‚ÇÉ=>d‚ÇÉ)
@save compress=true "jld/patchtest_mix_hr.jld" d‚ÇÅ d‚ÇÇ d‚ÇÉ

set‚àá¬≤ùù≠!(elements["Œ©·µç"])
opE = Operator{:H‚Çë_ThinShell}(:E=>E,:ŒΩ=>ŒΩ,:h=>h)
H‚Çë, L‚ÇÇ = opE(elements["Œ©·µç"])

# d·µõ = zeros(3*n‚Çö)
# for (i,node) in enumerate(nodes)
#     x = Vec{3}((node.x,node.y,node.z))
#     u_ = u(x)
#     d·µõ[3*i-2] = u_[1]
#     d·µõ[3*i-1] = u_[2]
#     d·µõ[3*i]   = u_[3]
# end

# fex = (k·µã·µõ'*k·µã·µã*k·µã·µõ + k·µè·µõ'*k·µè·µè*k·µè·µõ)*d·µõ - (-f + k·µã·µõ'*k·µã·µã*(k·¥∫·µã\f·¥∫) + k·µè·µõ'*k·µè·µè*(k·¥π·µè\f·¥π))
# fex1 = (k·µã·µõ'*k·µã·µã*k·µã·µõ)*d·µõ - (-f + k·µã·µõ'*k·µã·µã*(k·¥∫·µã\f·¥∫))
# fex2 = (k·µè·µõ'*k·µè·µè*k·µè·µõ)*d·µõ - (k·µè·µõ'*k·µè·µè*(k·¥π·µè\f·¥π))
# fex2 = (k·µè·µõ'*k·µè·µè*k·µè·µõ)*d·µõ

# d·µã = zeros(6*n·µ•)
# for i in 1:length(elements["Œ©"])
#     d·µã[18*i-17] = 1.0
#     d·µã[18*i-14] = 2.0
# end

# d·¥∫ = zeros(6*n·µ•)
# for i in 1:length(elements["Œ©"])
#     d·¥∫[18*i-17] = E*h
#     d·¥∫[18*i-16] = E*h
#     d·¥∫[18*i-14] = E*h
# end

# d·µè = zeros(9*n·µ•)
# for i in 1:length(elements["Œ©"])
#     d·µè[27*i-24] = -2.
#     d·µè[27*i-21] = -2.
#     d·µè[27*i-18] = -4.
#     d·µè[27*i-24] = 1.
# end

# d·¥π = zeros(9*n·µ•)
# for i in 1:length(elements["Œ©"])
#     d·¥π[27*i-24] = -E*h^3/12*2
#     d·¥π[27*i-21] = -E*h^3/12*2
#     d·¥π[27*i-18] = -E*h^3/12*2
#     d·¥π[27*i-24] = E*h^3/12
# end
# println(norm(k·¥π·µõ'*d·¥π))
# println(norm(k·µè·µè*d·µè+k·¥π·µè'*d·¥π))
# println(norm(k·¥π·µõ*d·µõ+k·¥π·µè*d·µè-f·¥π))
# f1 = k·¥π·µõ*d·µõ
# f2 = k·¥π·µè*d·µè

# println(norm(k·¥∫·µõ'*d·¥∫+k·¥π·µõ'*d·¥π))
# println(norm(k·µã·µã*d·µã+k·¥∫·µã'*d·¥∫))
# println(norm(k·µè·µè*d·µè+k·¥π·µè'*d·¥π))
# println(norm(k·¥∫·µõ*d·µõ+k·¥∫·µã*d·µã-f·¥∫))
# println(norm(k·¥π·µõ*d·µõ+k·¥π·µè*d·µè-f·¥π))
